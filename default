#HTTP -- redirect all traffic to HTTPS
log_format compression '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status $body_bytes_sent '
                       '"$http_referer" "$http_user_agent" "$gzip_ratio"';
upstream nodejs {
	server node_js:3000 max_fails=3 fail_timeout=60 weight=1;
}


server {
	listen 80;
	listen [::]:80 default_server ipv6only=on;
	return 301 https://$host$request_uri;
}

#HTTPS -- proxy all requests
server {
	#Enable HTTP/2
	listen 443 ssl http2;
	listen [::]:443 ssl http2;
	server_name maartens.website;
	
	#Let's Encrypt certificates
	ssl_certificate /etc/letsencrypt/live/maartens.website/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/maartens.website/privkey.pem;
	
	#Include SSL configuration
	# See https://cipherli.st/ for details on this configuration
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	ssl_prefer_server_ciphers on;
	ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
	ssl_ecdh_curve secp384r1; # Requires nginx >= 1.1.0
	ssl_session_cache shared:SSL:10m;
	ssl_session_tickets off; # Requires nginx >= 1.5.9
	ssl_stapling on; # Requires nginx >= 1.3.7
	ssl_stapling_verify on; # Requires nginx => 1.3.7
	resolver 8.8.8.8 8.8.4.4 valid=300s;
	resolver_timeout 5s;
	add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
	add_header X-Frame-Options DENY;
	add_header X-Content-Type-Options nosniff;

	ssl_dhparam /etc/ssl/certs/dhparam.pem;

	location / {
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-NginX-Proxy true;
		proxy_pass http://nodejs;
		proxy_ssl_session_reuse off;
		proxy_set_header Host $http_host;
		proxy_cache_bypass $http_upgrade;
		proxy_redirect off;
	}
}
